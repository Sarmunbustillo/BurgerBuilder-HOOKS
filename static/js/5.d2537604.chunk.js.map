{"version":3,"sources":["Components/Order/Order.js","containers/Orders/Orders.js","Components/Order/Order.module.css"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientOutpput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios","module","exports"],"mappings":"2KAoCeA,EAjCD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MACPI,EAAGJ,KATD,KASSI,EAAGH,OATZ,QAYX,OACI,yBAAKW,UAAWC,IAAQlB,OACpB,2CAAiBO,EAAjB,KACA,qCAAU,qCAAWY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,O,gCCmBzDC,uBAfS,SAAAC,GACpB,MAAO,CACHC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAIA,SAAAC,GACvB,MAAO,CACHC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAI/DP,CAA6CW,aAvC7C,SAAAjC,GAAU,IACd+B,EAAgC/B,EAAhC+B,cAAeJ,EAAiB3B,EAAjB2B,MAAOE,EAAU7B,EAAV6B,OAC7BK,qBAAU,WACNH,EAAcJ,EAAOE,KACtB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIL,EAAS,kBAACW,EAAA,EAAD,MAWb,OAVInC,EAAM0B,UACNF,EAAUxB,EAAMwB,OAAOjB,KAAI,SAAAkB,GAAK,OACpB,kBAAC,EAAD,CACIV,IAAKU,EAAMW,GACXnC,YAAawB,EAAMxB,YACnBmB,MAAOK,EAAML,YAM7B,6BACKI,KAoBwEa,O,mBCjDrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.d2537604.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount :props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    };\r\n\r\n    const ingredientOutpput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}> \r\n            {ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>ingredients: {ingredientOutpput} </p>\r\n            <p>Price: <strong>$ {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../Components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\n\r\n\r\n\r\n\r\nconst Orders = props => {\r\n    const {onFetchOrders, token, userId} = props;\r\n    useEffect(() => {\r\n        onFetchOrders(token, userId);\r\n    }, [onFetchOrders, token, userId])\r\n\r\n    let orders = <Spinner />;\r\n    if(!props.loading){\r\n        orders =  props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}\r\n                    />\r\n        ) )            \r\n    };  \r\n\r\n    return (\r\n        <div>\r\n            {orders}\r\n        </div>\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__Ty2KF\"};"],"sourceRoot":""}